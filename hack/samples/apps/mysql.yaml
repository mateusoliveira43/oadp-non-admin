apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: mysql-todolist
objects:
  # TODO need VolumeSnapshotClass with label velero.io/csi-volumesnapshot-class: 'true'?
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: ${NAMESPACE}-sa
      namespace: ${NAMESPACE}
      labels:
        component: ${NAMESPACE}
  - kind: PersistentVolumeClaim
    apiVersion: v1
    metadata:
      name: mysql
      namespace: ${NAMESPACE}
      labels:
        app: mysql
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        template.openshift.io/expose-uri: mariadb://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
      name: mysql
      namespace: ${NAMESPACE}
      labels:
        app: mysql
        service: mysql
    spec:
      ports:
      - protocol: TCP
        name: mysql
        port: 3306
      selector:
        app: mysql
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      annotations:
        template.alpha.openshift.io/wait-for-ready: 'true'
      name: mysql
      namespace: ${NAMESPACE}
      labels:
        e2e-app: "true"
    spec:
      selector:
        matchLabels:
          app: mysql
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            e2e-app: "true"
            app: mysql
            curl-tool: "true"
        spec:
          serviceAccountName: ${NAMESPACE}-sa
          containers:
          - image: registry.redhat.io/rhel8/mariadb-105:latest
            name: mysql
            env:
              - name: MYSQL_USER
                value: changeme
              - name: MYSQL_PASSWORD
                value: changeme
              - name: MYSQL_ROOT_PASSWORD
                value: root
              - name: MYSQL_DATABASE
                value: todolist
            ports:
            - containerPort: 3306
              name: mysql
            resources:
              limits:
                memory: 512Mi
            volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
            livenessProbe:
              tcpSocket:
                port: mysql
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
            startupProbe:
              exec:
                command:
                - /usr/bin/timeout
                - 1s
                - /usr/bin/mysql
                - $(MYSQL_DATABASE)
                - -h
                - 127.0.0.1
                - -u$(MYSQL_USER)
                - -p$(MYSQL_PASSWORD)
                - -e EXIT
              initialDelaySeconds: 5
              periodSeconds: 30
              timeoutSeconds: 2
              successThreshold: 1
              failureThreshold: 40 # 40x30sec before restart pod
          - image: docker.io/curlimages/curl:8.5.0
            name: curl-tool
            command: ["/bin/sleep", "infinity"]
          volumes:
          - name: mysql-data
            persistentVolumeClaim:
              claimName: mysql
  - kind: Service
    apiVersion: v1
    metadata:
      name: todolist
      namespace: ${NAMESPACE}
      labels:
        app: todolist
        service: todolist
        e2e-app: "true"
    spec:
      ports:
        - name: web
          port: 8000
          targetPort: 8000
      selector:
        app: todolist
        service: todolist
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: todolist
      namespace: ${NAMESPACE}
      labels:
        app: todolist
        service: todolist
        e2e-app: "true"
    spec:
      replicas: 1
      selector:
        app: todolist
        service: todolist
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            app: todolist
            service: todolist
            e2e-app: "true"
        spec:
          containers:
          - name: todolist
            image: quay.io/migtools/oadp-ci-todolist-mariadb-go:latest
            env:
              - name: foo
                value: bar
            ports:
              - containerPort: 8000
                protocol: TCP
          initContainers:
          - name: init-myservice
            image: docker.io/curlimages/curl:8.5.0
            command: ['sh', '-c', 'sleep 10; until /usr/bin/nc -z -w 1 mysql 3306; do echo Trying to connect to mysql DB port; sleep 5; done; echo mysql DB port reachable']
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: todolist-route
      namespace: ${NAMESPACE}
    spec:
      path: "/"
      to:
        kind: Service
        name: todolist
parameters:
  - description: Non admin user namespace
    name: NAMESPACE
    value: mysql-persistent
